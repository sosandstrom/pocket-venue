<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:s="http://www.springframework.org/schema/security"
         xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

<!--    <b:import resource="classpath:/domain-security.xml" />-->
        
    <http pattern="/index.html" security="none" />
    
    <http pattern="/domain/*/blob/v*/*" security="none" />
    <http pattern="/domain/monitor/**" security="none" />
    <http pattern="/domain/*/monitor/**" security="none" />
	
    <http realm="OpenServer" create-session="stateless"
        pattern="/**" authentication-manager-ref="apiAuthenticationManager">

        <http-basic />
        <custom-filter position="REMEMBER_ME_FILTER" ref="apiAuthenticationFilter" />
        <logout logout-success-url="/index.html" />
        
        <intercept-url pattern="/**" access="ROLE_ADMIN" />
    </http>
    
    <b:bean id="apiAuthenticationFilter" class="com.goldengekko.users.security.CookieAuthenticationFilter">
        <b:property name="authenticationManager" ref="apiAuthenticationManager" />
    </b:bean>
    <authentication-manager alias="apiAuthenticationManager">
        <authentication-provider ref="preAuthenticatedAuthenticationProvider" />
    </authentication-manager>
    
    <b:bean id="preAuthenticatedAuthenticationProvider" class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
        <b:property name="preAuthenticatedUserDetailsService" ref="domainUserService" />
    </b:bean>

    <b:bean id="voidAuthenticationSuccessHandler" class="com.goldengekko.users.security.VoidAuthenticationSuccessHandler" />
</b:beans>
