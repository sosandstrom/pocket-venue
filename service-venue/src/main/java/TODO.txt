

TODO
====

Datastore indexes config

Bring in security and app registration, move to common


i18nTranslation Move to open.


Unit/integration tests

Alphabetic sort, newest sort

Integration with Google places?



Must
====


Upload a CSV file to create the venues

Generate documentation and deploy

Return loclization in tag lists


Done
====
Test
Commit

Cursor when searching
Search within a location (country/city)

Add more fields
Index on more fields
Transactions
Put tag JSON in the cache.

Opening hours
Use datastore parent. Need to override.
Nearby


Add url to tags. Generalize. Move to Open. Do not move
Check in? Or is this Locations - Locations
Fixed namespace AOP


Review all exceptions
-Location, move to controller
-Look at all redirects
-unique error code

Update parent pom with same as Pocket review

Add the localization of text (same as TwoForOne categories). Also URL.

Upload images to blobstore



REST end points
===============

api/{domain}/place                          (POST)      Create a place                                             XX

api/{domain}/place/{id}                     (POST)      Update a place                                             XX
api/{domain}/place/{id}                     (GET)       Get a place                                                XX
api/{domain}/place/{id}                     (DELETE)    Delete a place (how to handle associated venues            XX

api/{domain}/place                          (GET)       Get all places                                             XX
api/{domain}/place/parent/{id}              (GET)       Get all places with parent id                              XX
api/{domain}/place/hierarchy/{id}           (GET)       Get all places with hierarchy                              XX
api/{domain}/place/tags?appTag1=&appTag2=   (GET)       Get all places matching tags                               X

api/{domain}/place/nearby                   (GET)       Get places nearby

api/{domain}/place?searchText=              (GET)                                                                  XX

api/{domain}/place/import                   (POST)      Import places
api/{domain}/place/export                   (GET)       Export places







api/{domain}/tag/                           (POST)      Create new tag                                      XX
api/{domain}/tag/{id}                       (POST)      Update tag                                          XX
api/{domain}/tag/{id}                       (GET)       Get tag                                             XX
api/{domain}/tag/{id}                       (DELETE)    Delete tag                                          XX more test needed

api/{domain}/tag/typ/{name}                 (GET)       Get nested tag structure of type                    XX
api/{domain}/tag/parent/{id}                (GET)       Get all tags for parent                             XX








